{"version":3,"sources":["utils/token.js","utils/date.js","components/slider.js","components/wowTokenChart.js","components/lineChart.js","components/wowtoken.js","App.js","serviceWorker.js","index.js"],"names":["showTokenGold","token","getSimpleDate","d","toLocaleDateString","year","month","day","Slider","parentSVG","range","size","vis","sd","this","width","height","x","d3","domain","svg","g","append","labelL","attr","labelR","brush","extent","on","evt","s","selection","leftValue","invert","rightValue","text","handle","i","node","value","map","dispatchEvent","CustomEvent","data","low","up","zoneData","filteredValues","values","filter","v","date","zone","filterDataByRange","originalData","getTime","updateChart","gBrush","call","selectAll","type","enter","e","y","each","updateValue","move","lineChart","parentElement","config","showTooltip","selectedZone","windowWidth","window","innerWidth","windowHeight","innerHeight","svgWidth","svgHeight","chartWidth","marginLeft","marginRight","chartHeight","marginTop","marginBottom","marginControllerHeight","updateConfig","chart","scaleX","scaleY","scaleZ","axisXCall","tickFormat","axisYCall","axisX","axisY","title","style","t","duration","transition","controller","xExtent","chartBgArea","join","chartBg","chartBgLine","legendContainer","toolTipContainer","toolTipDateLabel","toolTipValueLabel","slider","initRange","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","dataDate","dataZone","yExtent","price","scale","dim","target","getBoundingClientRect","clientX","left","dateInvert","toolTipDate","upperIndex","findIndex","upper","lower","findNearestDate","hour","minute","hour12","getSimpleDateTime","zoneIdx","indexOf","toolTipData","find","updateToolTips","yTicks","ticks","shift","ydashLines","line","paths","toolTipVerticalLine","barColor","barHoverColor","tooltipColor","WowTokenChart","useEffect","fetch","then","resp","ok","json","idx","p","reformatData","tokens","initChart","id","WowToken","useState","msg","setMessage","tokenValue","setTokenValue","refresh","setRefresh","getWowTokens","Promise","resolve","reject","catch","err","className","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.3e8fd2d7.chunk.js","sourcesContent":["const showTokenGold = (token) => {\r\n  if (typeof token === 'number') {\r\n    if (token>0) {\r\n      return token/10000 + ' G';\r\n    } else {\r\n      return 'Error';\r\n    }\r\n  } else {\r\n    return 'Loading...'\r\n  }\r\n}\r\n// original data:\r\n/**\r\n * [\r\n *   {d: date, p:[CN,US,EU,KR,TW]},\r\n *   ... \r\n * ]\r\n */\r\n// the data would be like:\r\n/**\r\n * [\r\n *   {\r\n *     zone: CN,\r\n *     values: [\r\n *       {date: 11111, price: 2222},\r\n *       {date: 11111, price: 2222},\r\n *       ...\r\n *     ]\r\n *   },\r\n *   ...\r\n * ]\r\n */\r\nconst reformatData = (data) => {\r\n  return ['CN', 'US', 'EU', 'KR', 'TW'].map((zone, idx) => {\r\n    return {\r\n      zone,\r\n      values: data.map(d => ({date: d.d, price: d.p[idx] > 0 ? d.p[idx]/10000 : d.p[idx-1]/10000}))\r\n    }\r\n  })\r\n}\r\n\r\nconst filterDataByRange = (data, range) => {\r\n  const [low, up] = range;\r\n  return data.map(zoneData => {\r\n    const filteredValues = zoneData.values.filter(v => v.date <= up && v.date >= low);\r\n    return {\r\n      zone: zoneData.zone,\r\n      values: filteredValues\r\n    }\r\n  })\r\n}\r\nexport {\r\n  showTokenGold,\r\n  reformatData,\r\n  filterDataByRange\r\n};","const getSimpleDateTime = (d) => {\r\n  const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', hour12: false };\r\n  return d.toLocaleDateString('en-US', options);\r\n}\r\n\r\nconst getSimpleDate = d => {\r\n  const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n  return d.toLocaleDateString('en-US', options);\r\n}\r\n\r\nconst getLastWeekFromDate = d => {\r\n  return new Date(d.getFullYear(), d.getMonth(), d.getDate() - 7, d.getHours(), d.getMinutes(), d.getSeconds(), d.getMinutes());\r\n}\r\n\r\n// date is alreay sorted ascend\r\nconst findNearestDate = (date, d) => {\r\n  const upperIndex = date.findIndex(v => v >= d);\r\n  if (upperIndex === 0) {\r\n    return date[0];\r\n  } else if (upperIndex > 0) {\r\n    const upper = date[upperIndex];\r\n    const lower = date[upperIndex - 1];\r\n    const lowerDiff = d - lower;\r\n    const upperDiff = upper - d;\r\n    return lowerDiff > upperDiff ? upper : lower;\r\n  } else {\r\n    return d;\r\n  }\r\n}\r\n\r\nexport { \r\n  getSimpleDateTime,\r\n  getSimpleDate,\r\n  getLastWeekFromDate,\r\n  findNearestDate\r\n};","import * as d3 from 'd3';\r\nimport { getSimpleDate } from '../utils/date';\r\nimport { filterDataByRange } from '../utils/token';\r\n\r\nclass Slider {\r\n  constructor(parentSVG, range, size, vis) {\r\n    const sd = this;\r\n    // set width and height of svg\r\n    sd.size = size;\r\n\r\n    // dimensions of slider bar\r\n    const [width, height] = size;\r\n\r\n    // create x scale\r\n    sd.x = d3.scaleTime()\r\n      .domain(range)  // data space\r\n      .range([0, width]);  // display space\r\n\r\n    // create svg and translated g\r\n    sd.svg = parentSVG;\r\n    sd.g = sd.svg.append('g');\r\n    \r\n    // labels\r\n    sd.labelL = sd.g.append('text')\r\n      .attr('id', 'labelleft')\r\n      .attr('x', 0)\r\n      .attr('y', height + 15)\r\n      .attr('text-anchor', 'middle')  \r\n\r\n    sd.labelR = sd.g.append('text')\r\n      .attr('id', 'labelright')\r\n      .attr('x', 0)\r\n      .attr('y', height + 15)\r\n      .attr('text-anchor', 'middle')  \r\n\r\n    const brushResizePath = (d) => {\r\n      const e = +(d.type === 'e'),\r\n        x = e ? 1 : -1,\r\n        y = height / 2;\r\n      return 'M' + (.5 * x) + ',' + y + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6) + 'V' + (2 * y - 6) +\r\n        'A6,6 0 0 ' + e + ' ' + (.5 * x) + ',' + (2 * y) + 'ZM' + (2.5 * x) + ',' + (y + 8) + 'V' + (2 * y - 8) +\r\n        'M' + (4.5 * x) + ',' + (y + 8) + 'V' + (2 * y - 8);\r\n    }\r\n\r\n    // define brush\r\n    sd.brush = d3.brushX()\r\n      .extent([[0,0], [width, height]])\r\n      .on('brush', evt => {\r\n        const s = evt.selection;\r\n        const leftValue = sd.x.invert(s[0]);\r\n        const rightValue = sd.x.invert(s[1]);\r\n        // update and move labels\r\n        sd.labelL.attr('x', s[0])\r\n          .text(getSimpleDate(leftValue));\r\n        sd.labelR.attr('x', s[1])\r\n          .text(getSimpleDate(rightValue));\r\n        // move brush handles      \r\n        sd.handle.attr('display', null).attr('transform', (d, i) => { \r\n          return `translate(${s[i]}, ${- height / 4})`; \r\n        });\r\n        // update view\r\n        // if the view should only be updated after brushing is over, \r\n        // move these two lines into the on('end') part below\r\n        sd.svg.node().value = s.map(d => {\r\n          const temp = sd.x.invert(d);\r\n          return +temp\r\n        });\r\n        sd.svg.node().dispatchEvent(new CustomEvent('input'));\r\n\r\n        // update chart\r\n        const data = filterDataByRange(vis.originalData, [leftValue.getTime(), rightValue.getTime()]);\r\n        vis.updateChart(data);\r\n      });\r\n\r\n    // append brush to g\r\n    sd.gBrush = sd.g.append('g')\r\n      .attr('class', 'brush')\r\n      .call(sd.brush);\r\n\r\n    sd.handle = sd.gBrush.selectAll('.handle--custom')\r\n      .data([{type: 'w'}, {type: 'e'}])\r\n      .enter().append('path')\r\n      .attr('class', 'handle--custom')\r\n      .attr('stroke', '#000')\r\n      .attr('fill', '#eee')\r\n      .attr('cursor', 'ew-resize')\r\n      .attr('d', brushResizePath);\r\n\r\n    // override default behaviour - clicking outside of the selected area \r\n    // will select a small piece there rather than deselecting everything\r\n    sd.gBrush.selectAll('.overlay')\r\n      .each(d => { \r\n        d.type = 'selection'; \r\n      });\r\n    \r\n    // select entire range\r\n    this.updateValue(range);\r\n  }\r\n\r\n  updateValue(range) {\r\n    const sd = this;\r\n    sd.gBrush.call(sd.brush.move, range.map(sd.x));\r\n  }\r\n\r\n}\r\n\r\nexport default Slider;","import React, { useEffect } from 'react';\r\nimport LineChart from './lineChart';\r\nimport { reformatData } from '../utils/token';\r\n\r\nconst config = {\r\n  svgWidth: 1000,\r\n  svgHeight: 800,\r\n  marginTop: 50,\r\n  marginControllerHeight: 30,\r\n  marginRight: 30,\r\n  marginBottom: 60,\r\n  marginLeft: 60,\r\n  chartBg: 'lightyellow',\r\n  chartWidth: 1000,\r\n  chartHeight: 800,\r\n  barColor: '#1034a6',\r\n  barHoverColor: '#0080ff',\r\n  tooltipColor: 'green',\r\n  title: 'World of Warcraft tokens chart'\r\n}\r\nconst lineChart = new LineChart('div#line-chart', config);\r\n\r\nconst WowTokenChart = () => {\r\n  useEffect(() => {\r\n    fetch('/api/wowToken/all')\r\n    .then(resp => {\r\n      if (resp.ok) {\r\n        resp.json()\r\n        .then(data => {\r\n          // re-format tokens\r\n          const originalData = reformatData(data.tokens);\r\n          lineChart.initChart(originalData);\r\n        });\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  return <div id='line-chart-container'>\r\n    <div id='line-chart'></div>\r\n  </div>\r\n}\r\n\r\nexport default WowTokenChart;","import * as d3 from 'd3';\r\nimport Slider from './slider';\r\nimport { getLastWeekFromDate, findNearestDate, getSimpleDateTime } from '../utils/date';\r\nimport './lineChart.scss';\r\n\r\nclass LineChart {\r\n  constructor(parentElement, config) {\r\n    this.parentElement = parentElement;\r\n    this.config = config;\r\n    this.showTooltip = false;\r\n    this.selectedZone = null;\r\n  }\r\n\r\n  updateConfig() {\r\n    // update the width and height\r\n    const windowWidth = window.innerWidth;\r\n    const windowHeight = window.innerHeight;\r\n    this.config.svgWidth = windowWidth / 1.1;\r\n    this.config.svgHeight = windowHeight / 1.2 > 800 ? 800 : windowHeight / 1.2;\r\n    this.config.chartWidth = this.config.svgWidth - this.config.marginLeft - this.config.marginRight;\r\n    this.config.chartHeight = this.config.svgHeight - this.config.marginTop - this.config.marginBottom - this.config.marginControllerHeight;\r\n  }\r\n\r\n  initChart(data) {\r\n    this.updateConfig();\r\n    const vis = this;\r\n    vis.originalData = data;\r\n    // create svg\r\n    vis.svg = d3.select(vis.parentElement)\r\n      .append('svg')\r\n      .attr('width', vis.config.svgWidth)\r\n      .attr('height', vis.config.svgHeight);\r\n\r\n    // create g and transform, this is for the chart\r\n    vis.chart = vis.svg.append('g')\r\n      .attr('transform', `translate(${vis.config.marginLeft}, ${vis.config.marginTop + vis.config.marginControllerHeight + 20})`)\r\n    \r\n    // create scaleX\r\n    vis.scaleX = d3.scaleTime();\r\n\r\n    // create scaleY\r\n    vis.scaleY = d3.scaleLinear();\r\n\r\n    vis.scaleZ = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n    vis.axisXCall = d3.axisBottom()\r\n      .tickFormat(d3.timeFormat('%m/%d/%Y'));\r\n  \r\n    vis.axisYCall = d3.axisLeft()\r\n\r\n    vis.axisX = vis.chart.append('g')\r\n      .attr(\"transform\", `translate(0, ${vis.config.chartHeight})`);\r\n  \r\n    vis.axisY = vis.chart.append('g')\r\n\r\n    vis.title = vis.svg.append('text')\r\n      .attr('x', vis.config.svgWidth / 2)           \r\n      .attr('y', vis.config.marginTop / 2)\r\n      .attr('text-anchor', 'middle')  \r\n      .style('font-size', '30px') \r\n      .style('font-weight', '600')  \r\n      .text(vis.config.title);\r\n\r\n    vis.t = d3.transition().duration(vis.config.transition || 500);\r\n\r\n    vis.controller = vis.svg.append('g').attr('transform', `translate(${vis.config.marginLeft+vis.config.chartWidth*0.05}, ${vis.config.marginTop})`);\r\n\r\n    const xExtent = d3.extent(data[0].values, d => d.date);\r\n\r\n    vis.chartBgArea = vis.chart.selectAll('.bgArea')\r\n      .data([1])\r\n      .join('rect')\r\n      .attr('class', 'bgArea')\r\n      .attr('width', vis.config.chartWidth)\r\n      .attr('height', vis.config.chartHeight)\r\n      .attr('fill', vis.config.chartBg)\r\n      .on('click', () => {\r\n        vis.selectedZone = null;\r\n      });\r\n\r\n    vis.chartBgLine = vis.chart.selectAll('.y-dash-area')\r\n      .data([[[0, 0], [vis.config.chartWidth, 0]]])\r\n      .transition(vis.t);\r\n\r\n    vis.legendContainer = vis.chart.append('g')\r\n      .attr('class', 'legend');\r\n\r\n    vis.toolTipContainer = vis.chart.append('g')\r\n      .attr('class', 'tooltip-container')\r\n      .style('opacity','0');\r\n\r\n    vis.toolTipDateLabel = vis.toolTipContainer.selectAll('.tooltip-date-label')\r\n      .data([0])\r\n      .join('text')\r\n      .attr('class', 'tooltip-date-label');\r\n\r\n    vis.toolTipValueLabel = vis.toolTipContainer.selectAll('.tooltip-value-label')\r\n      .data([0])\r\n      .join('text')\r\n      .attr('class', 'tooltip-value-label');\r\n\r\n    vis.slider = new Slider(vis.controller, xExtent, [vis.config.chartWidth*0.9, vis.config.marginControllerHeight], vis);\r\n    //get the last 7 days\r\n    const initRange = [getLastWeekFromDate(new Date(xExtent[1])).getTime(), xExtent[1]];\r\n    vis.slider.updateValue(initRange);\r\n  }\r\n\r\n  updateChart(data) {\r\n    // the data would be like:\r\n    /**\r\n     * [\r\n     *   {\r\n     *     zone: CN,\r\n     *     values: [\r\n     *       {date: 11111, price: 2222},\r\n     *       {date: 11111, price: 2222},\r\n     *       ...\r\n     *     ]\r\n     *   },\r\n     *   ...\r\n     * ]\r\n     */\r\n    this.updateConfig();\r\n    const vis = this;\r\n    vis.data = data;\r\n    vis.dataDate = data[0].values.map(d => d.date);\r\n    vis.dataZone = data.map(d => d.zone);\r\n    const {chartWidth, chartHeight, chartBg} = vis.config;\r\n    // update scales\r\n    const xExtent = d3.extent(vis.dataDate);\r\n    vis.scaleX.domain(xExtent)\r\n      .range([0, chartWidth]);\r\n\r\n    const yExtent = [\r\n      d3.min(data, d => d3.min(d.values, v => v.price)),\r\n      d3.max(data, d => d3.max(d.values, v => v.price))\r\n    ];\r\n    vis.scaleY.domain([yExtent[0]*0.8, yExtent[1]*1.2])\r\n      .range([chartHeight, 0]);\r\n      //.interpolate(d3.interpolateRound);\r\n\r\n    // update axises\r\n    vis.axisXCall.scale(vis.scaleX);\r\n    vis.axisX.call(vis.axisXCall);\r\n\r\n    vis.axisYCall.scale(vis.scaleY);\r\n    vis.axisY.call(vis.axisYCall);\r\n\r\n    vis.toolTipDateLabel.attr('transform', `translate(-60, ${chartHeight+35})`);\r\n\r\n    // update background\r\n    vis.chart.selectAll('.bgArea')\r\n      .attr('width', chartWidth)\r\n      .attr('height', chartHeight)\r\n      .attr('fill', chartBg)\r\n      .on('mousemove', (evt, d) => {\r\n        const e = evt.target;\r\n        const dim = e.getBoundingClientRect();\r\n        const x = evt.clientX - dim.left;\r\n        const dateInvert = vis.scaleX.invert(x);\r\n        vis.toolTipDate = findNearestDate(vis.dataDate, dateInvert.getTime());\r\n        vis.toolTipContainer.attr('transform', `translate(${vis.scaleX(vis.toolTipDate)}, 0)`);\r\n        vis.toolTipDateLabel.text(getSimpleDateTime(new Date(vis.toolTipDate)));\r\n        if (vis.selectedZone != null) {\r\n          const zoneIdx = vis.dataZone.indexOf(vis.selectedZone);\r\n          const zoneData = vis.data[zoneIdx];\r\n          const toolTipData = zoneData.values.find(d => d.date === vis.toolTipDate);\r\n          vis.toolTipValueLabel.attr('transform', `translate(10, ${vis.scaleY(toolTipData.price)})`)\r\n            .text(`${toolTipData.price}G`);\r\n        }\r\n      })\r\n      .on('click', (evt, d) => {\r\n        vis.selectedZone = null;\r\n        vis.updateToolTips();\r\n    });\r\n\r\n    // add dashed area on Y axis\r\n    const yTicks = vis.scaleY.ticks();\r\n    yTicks.shift();\r\n    const ydashLines = yTicks.map(y => [[0, y], [chartWidth, y]])\r\n    vis.chartBgLine = vis.chart.selectAll('.y-dash-area')\r\n      .data(ydashLines)\r\n      .join('line')\r\n      .attr('class', 'y-dash-area')\r\n      .attr('x1', d=>d[0][0])\r\n      .attr('y1', d=>vis.scaleY(d[0][1]))\r\n      .attr('x2', d=>d[1][0])\r\n      .attr('y2', d=>vis.scaleY(d[1][1]));\r\n    \r\n    const line = d3.line()\r\n      .x(d => vis.scaleX(d.date))\r\n      .y(d => vis.scaleY(d.price));\r\n\r\n    vis.scaleZ.domain(data.map(d => d.zone));\r\n\r\n    // Create a <g> element for each zone\r\n    // vis.zones = vis.chart.selectAll('.zone')\r\n    //   .data(data)\r\n    //   .join('g')\r\n    //   .attr('class', 'zone');\r\n    \r\n    // Create a <path> element inside of each city <g>\r\n    // Use line generator function to convert data points into SVG path string\r\n    vis.paths = vis.chart.selectAll('.zone-path-border')\r\n      .data(data)\r\n      .join('path')\r\n      .attr('class', 'zone-path-border')\r\n      .attr('id', d=> `zone-border-${d.zone}`)\r\n      .attr('d', d => line(d.values))\r\n      .attr('fill', 'none')\r\n      .style('stroke', 'black')\r\n      .style('stroke-width', '4px')\r\n      .style('opacity', '0');\r\n\r\n    vis.paths = vis.chart.selectAll('.zone-path')\r\n      .data(data)\r\n      .join('path')\r\n      .attr('class', 'zone-path')\r\n      .attr('d', d => line(d.values))\r\n      .attr('fill', 'none')\r\n      .style('stroke', d => vis.scaleZ(d.zone))\r\n      .style('stroke-width', '2px')\r\n      .on('mouseover', function(evt, d) {\r\n        d3.selectAll(`#zone-border-${d.zone}`)\r\n          .style('opacity', 1);\r\n        d3.select(this).style('cursor', 'pointer'); \r\n      })\r\n      .on('mouseout', function(evt, d) {\r\n        d3.selectAll(`#zone-border-${d.zone}`)\r\n          .style('opacity', 0);\r\n        d3.select(this).style('cursor', 'default');\r\n      })\r\n      .on('click', function(evt, d) {\r\n        vis.selectedZone = d.zone;\r\n        vis.updateToolTips();\r\n      });\r\n    \r\n    vis.toolTipVerticalLine = vis.toolTipContainer.selectAll('.tooltip-line')\r\n      .data([0])\r\n      .join('line')\r\n      .attr('class', 'tooltip-line')\r\n      .attr('x1', 0)\r\n      .attr('y1', 0)\r\n      .attr('x2', 0)\r\n      .attr('y2', chartHeight)\r\n      .attr('stroke-width', 1)\r\n      .attr('stroke', 'black');\r\n    \r\n    // legend\r\n    vis.legendContainer.attr('transform', `translate(${chartWidth - 100}, 10)`);\r\n\r\n    vis.legendContainer.selectAll('.legend-line')\r\n      .data(data.map(d => d.zone))\r\n      .join('line')\r\n      .attr('class', 'legend-line')\r\n      .attr('x1', 0)\r\n      .attr('y1', (d, i) => i*15)\r\n      .attr('x2', 60)\r\n      .attr('y2', (d, i) => i*15)\r\n      .attr('stroke-width', 2)\r\n      .attr('stroke', d => vis.scaleZ(d));\r\n\r\n    vis.legendContainer.selectAll('.legend-text')\r\n      .data(data.map(d => d.zone))\r\n      .join('text')\r\n      .attr('class', 'legend-text')\r\n      .attr('x', 65)           \r\n      .attr('y', (d, i) => i*15 + 3)\r\n      .attr('text-anchor', 'left')  \r\n      .style('font-size', '10px') \r\n      .style('font-weight', '600')  \r\n      .text(d => d);\r\n  }\r\n\r\n  updateToolTips() {\r\n    const vis = this;\r\n    if (vis.selectedZone != null) {\r\n      vis.toolTipContainer.style('opacity', 1);\r\n    } else {\r\n      vis.toolTipContainer.style('opacity', 0);\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default LineChart;","import React, {useEffect, useState} from 'react';\r\nimport { showTokenGold } from '../utils/token';\r\nimport WowTokenChart from './wowTokenChart';\r\nimport './wowtoken.scss';\r\n\r\nconst WowToken = () => {\r\n  const [message, setMessage] = useState({type: 0, msg: 'Loading...'});\r\n  const [tokenValue, setTokenValue] = useState([]);\r\n  const [refresh, setRefresh] = useState(0);\r\n  useEffect(() => {\r\n    const getAuthorize = () => {\r\n      // get access token via authroize flow\r\n      // window.location.href='/api/oauth2/authorize';\r\n\r\n      // get access token via credential flow\r\n      return fetch('/api/oauth2/credflow')\r\n      .then(resp => {\r\n        if (resp.ok) {\r\n          // we can refresh the page\r\n          setMessage({type: 1, msg: 'obtain access token successfully'});\r\n          setRefresh(1);\r\n          return Promise.resolve();\r\n        } else {\r\n          setMessage({type: -1, msg: 'failed to obtain access token'});\r\n          return Promise.reject();\r\n        }\r\n      })\r\n    }\r\n\r\n    const getWowTokens = () => {\r\n      return fetch('/api/wowToken')\r\n      .then(resp => {\r\n        if (resp.ok) {\r\n          return resp.json()\r\n          .then(data => {\r\n            setMessage({type: 2, msg: 'WOW tokens'});\r\n            setTokenValue(data);\r\n            return Promise.resolve();\r\n          })\r\n        } else {\r\n          return Promise.reject();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        return Promise.reject();\r\n      });\r\n    }\r\n\r\n    const getWowTokensWithRetry = () => {\r\n      return getWowTokens()\r\n      .then(() => {\r\n        // good do nothing;\r\n      })\r\n      .catch(() => {\r\n        // retry for one time\r\n        return getAuthorize()\r\n        .then(() => {\r\n          return getWowTokens()\r\n          .catch(() => {\r\n            setMessage({type: -2, msg: 'failed to obtain access tokens with access token'});\r\n          });\r\n        })\r\n      })\r\n    }\r\n\r\n    getWowTokensWithRetry();\r\n  }, [refresh]);\r\n\r\n  return <div className='token-table'>\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <td>CN: {showTokenGold(tokenValue[0])}</td>\r\n          <td>US: {showTokenGold(tokenValue[1])}</td>\r\n          <td>EU: {showTokenGold(tokenValue[2])}</td>\r\n          <td>KR: {showTokenGold(tokenValue[3])}</td>\r\n          <td>TW: {showTokenGold(tokenValue[4])}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <WowTokenChart />\r\n  </div>\r\n}\r\n\r\nexport default WowToken;","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport WowToken from './components/wowtoken';\n\nfunction App() {\n  return (\n    <main>\n      <Switch>\n        <Route exact path='/' component={WowToken}/>\n        <Route path='/wowtoken' component={WowToken}/>\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}